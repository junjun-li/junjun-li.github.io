(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{481:function(t,s,a){"use strict";a.r(s);var n=a(42),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"设计原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计原则"}},[t._v("#")]),t._v(" 设计原则")]),t._v(" "),a("h2",{attrs:{id:"何为-设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#何为-设计"}},[t._v("#")]),t._v(" 何为“设计”")]),t._v(" "),a("p",[t._v("按我的理解，通俗来说，设计（仅指编程设计）就是按照哪一种思路或者标准来实现功能。同样的功能，不同的设计思想都能用不同的方式来实现，前期效果可能一样，但是随着产品功能的增加和扩展，设计的作用才会慢慢的显示出来。")]),t._v(" "),a("p",[t._v("结合《UNIX/Linux 设计哲学》中提到的系统设计原则 https://github.com/wangfupeng1988/read-notes/blob/master/book/Linux-Unix%E8%AE%BE%E8%AE%A1%E6%80%9D%E6%83%B3.md 。可能有一些会跟传统思想有区别，但是请你重视它们。")]),t._v(" "),a("ul",[a("li",[t._v("准则 1：小即是美")]),t._v(" "),a("li",[t._v("准则 2：让每个程序只做好一件事")]),t._v(" "),a("li",[t._v("准则 3：快速建立原型")]),t._v(" "),a("li",[t._v("准则 4：舍弃高效率而取可移植性")]),t._v(" "),a("li",[t._v("准则 5：采用纯文本来存储数据")]),t._v(" "),a("li",[t._v("准则 6：充分利用软件的杠杆效应（软件复用）")]),t._v(" "),a("li",[t._v("准则 7：使用 shell 脚本来提高杠杆效应和可移植性")]),t._v(" "),a("li",[t._v("准则 8：避免强制性的用户界面")]),t._v(" "),a("li",[t._v("准则 9：让每个程序都称为过滤器")]),t._v(" "),a("li",[t._v("十条小准则\n"),a("ul",[a("li",[t._v("允许用户定制环境")]),t._v(" "),a("li",[t._v("尽量使操作系统内核小而轻量化")]),t._v(" "),a("li",[t._v("使用小写字母并尽量简短")]),t._v(" "),a("li",[t._v("保护树木")]),t._v(" "),a("li",[t._v("沉默是金")]),t._v(" "),a("li",[t._v("并行思考")]),t._v(" "),a("li",[t._v("各部分之和大于整体")]),t._v(" "),a("li",[t._v("寻求 90% 的解决方案")]),t._v(" "),a("li",[t._v("更坏就是更好")]),t._v(" "),a("li",[t._v("层次化思考")])])])]),t._v(" "),a("h2",{attrs:{id:"_5-大设计原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-大设计原则"}},[t._v("#")]),t._v(" 5 大设计原则")]),t._v(" "),a("h3",{attrs:{id:"s-单一职责原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#s-单一职责原则"}},[t._v("#")]),t._v(" S - 单一职责原则")]),t._v(" "),a("p",[t._v("一个程序只做好一件事，如果功能过于复杂就拆分开，每个部分保持独立。")]),t._v(" "),a("h3",{attrs:{id:"o-开放封闭原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#o-开放封闭原则"}},[t._v("#")]),t._v(" O - 开放封闭原则")]),t._v(" "),a("p",[t._v("对修改封闭，对扩展开放，"),a("strong",[t._v("这是软件设计的终极目标")]),t._v("。即要设计一种机制，当需求发生变化时，根据这种机制扩展代码，而不是修改原有的代码。")]),t._v(" "),a("h3",{attrs:{id:"l-李氏置换原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#l-李氏置换原则"}},[t._v("#")]),t._v(" L - 李氏置换原则")]),t._v(" "),a("p",[t._v("子类能覆盖父类，父类能出现的地方子类就能出现。JS 中子类继承父类的场景较少，又不是强类型语言，因此体现较少。")]),t._v(" "),a("h3",{attrs:{id:"i-接口独立原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#i-接口独立原则"}},[t._v("#")]),t._v(" I - 接口独立原则")]),t._v(" "),a("p",[t._v("保持接口的单一独立，避免出现“胖接口”。类似于单一职责原则，只不过前者说的比较统一，后者是单独对接口的规定。JS 中没有接口，因此体现较少。")]),t._v(" "),a("h3",{attrs:{id:"d-依赖导致原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#d-依赖导致原则"}},[t._v("#")]),t._v(" D - 依赖导致原则")]),t._v(" "),a("p",[t._v("面向接口编程，依赖于抽象而不依赖于具体。写代码时用到具体类时，不与具体类交互，而与具体类的上层接口交互。")]),t._v(" "),a("h2",{attrs:{id:"举例说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#举例说明"}},[t._v("#")]),t._v(" 举例说明")]),t._v(" "),a("p",[t._v("后三个原则是基于高级面向对象语言语法的（如 java），找不到太合适的例子，就先以常见的 Promise 来解释一下前两个原则。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加载图片")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadImg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" promise "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" img "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'img'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onerror")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'图片加载失败'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" src\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" promise\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" src "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://www.imooc.com/static/img/index/logo_new.png'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadImg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("src"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nresult\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("img")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'img.width'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" img\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("img")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'img.height'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 统一捕获异常")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br")])]),a("ul",[a("li",[t._v("单一职责原则：每个"),a("code",[t._v("then")]),t._v("中的逻辑只做好一件事，如果要做多个就用多个"),a("code",[t._v("then")])]),t._v(" "),a("li",[t._v("开放封闭原则：如果这个需求要修改，那去扩展"),a("code",[t._v("then")]),t._v("即可，现有的逻辑不用修改，即对扩展开放、对修改封闭")])]),t._v(" "),a("p",[t._v("这里引申两点：")]),t._v(" "),a("ul",[a("li",[t._v("其实 S 和 O 是相符现成的，相互依赖")]),t._v(" "),a("li",[t._v("开放封闭原则的好处不止于此，从整个软件开发流程看，减少现有逻辑的更改，也会减少测试的成本")])]),t._v(" "),a("h2",{attrs:{id:"简介-23-种设计模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介-23-种设计模式"}},[t._v("#")]),t._v(" 简介 23 种设计模式")]),t._v(" "),a("p",[t._v("以下是所有 23 种设计模式。一些是前端常用且能找到经典使用场景的，一些是不常用或者找不到代表性的使用场景的。根据使用的不同，讲解时也会区分优先级，重点的模式详细讲解。")]),t._v(" "),a("ul",[a("li",[t._v("创建型模式\n"),a("ul",[a("li",[a("strong",[t._v("工厂模式")]),t._v("（工厂方法模式，抽象工厂模式，建造者模式）")]),t._v(" "),a("li",[a("strong",[t._v("单例模式")])]),t._v(" "),a("li",[t._v("原型模式")])])]),t._v(" "),a("li",[t._v("结构型模式\n"),a("ul",[a("li",[a("strong",[t._v("适配器模式")])]),t._v(" "),a("li",[a("strong",[t._v("装饰器模式")])]),t._v(" "),a("li",[a("strong",[t._v("代理模式")])]),t._v(" "),a("li",[a("strong",[t._v("外观模式")])]),t._v(" "),a("li",[t._v("桥接模式")]),t._v(" "),a("li",[t._v("组合模式")]),t._v(" "),a("li",[t._v("享元模式")])])]),t._v(" "),a("li",[t._v("行为型模式\n"),a("ul",[a("li",[t._v("策略模式")]),t._v(" "),a("li",[t._v("模板方法模式")]),t._v(" "),a("li",[a("strong",[t._v("观察者模式")])]),t._v(" "),a("li",[a("strong",[t._v("迭代器模式")])]),t._v(" "),a("li",[t._v("职责连模式")]),t._v(" "),a("li",[t._v("命令模式")]),t._v(" "),a("li",[t._v("备忘录模式")]),t._v(" "),a("li",[a("strong",[t._v("状态模式")])]),t._v(" "),a("li",[t._v("访问者模式")]),t._v(" "),a("li",[t._v("中介者模式")]),t._v(" "),a("li",[t._v("解释器模式")])])])]),t._v(" "),a("p",[t._v("接下来说两个问题：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("我如何讲解设计模式？")]),t._v(" "),a("ul",[a("li",[t._v("介绍以及举例（生活中易理解的）")]),t._v(" "),a("li",[t._v("画 UML 类图写 demo 代码")]),t._v(" "),a("li",[t._v("经典应用讲解（如果该设计模式没有经典应用，就不讲）")])])]),t._v(" "),a("li",[a("strong",[t._v("你如何学习设计模式？")]),t._v(" "),a("ul",[a("li",[t._v("明白每个设计的目的和道理")]),t._v(" "),a("li",[t._v("通过经典应用体会它的真正使用场景")]),t._v(" "),a("li",[t._v("自己编码时尽量模仿")])])])]),t._v(" "),a("p",[t._v("最后说明一下。虽然设计模式案例说应该基于 java 学习，因为 java 具有完善的面向对象语言编程的语法。但是现在我们限定的前提环境是前端 JS ，那就不应该再按照 java 的模式去讲解设计模式，否则就是削足适履。")]),t._v(" "),a("ul",[a("li",[t._v("JS 和 java 语法不一样；")]),t._v(" "),a("li",[t._v("前端和 java 的应用场景也不同，如前端不会考虑并发、内存泄露")])]),t._v(" "),a("h2",{attrs:{id:"如何学习设计模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何学习设计模式"}},[t._v("#")]),t._v(" 如何学习设计模式")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("明白每个设计的道理和用意")])]),t._v(" "),a("li",[a("p",[t._v("通过经典应用体会它的真正使用场景")])]),t._v(" "),a("li",[a("p",[t._v("多思考, 工作的时候多模仿")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);