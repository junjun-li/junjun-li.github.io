(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{425:function(s,a,n){"use strict";n.r(a);var e=n(42),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"shell-脚本配置自动部署"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#shell-脚本配置自动部署"}},[s._v("#")]),s._v(" shell 脚本配置自动部署")]),s._v(" "),n("p",[s._v("上面测试之后, jenkins 只会执行一个 echo 脚本, 并不会帮我们部署和运行项目, 我们还需要配置 shell 脚本, 运行我们的 dockerfile 脚本才行")]),s._v(" "),n("h2",{attrs:{id:"shell-脚本的简单介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#shell-脚本的简单介绍"}},[s._v("#")]),s._v(" shell 脚本的简单介绍")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这句表示这是一个shell脚本")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义变量")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ${containerName} 表示读取jenkins配置参数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $containerName 输出这个变量的值(shell语法)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("containerName")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${containerName}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("port")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${port}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --no-cache 不需要缓存 以保证每次构建都是最新的文件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 完成了镜像的构建")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker build --no-cache -t web:1.0 .")]),s._v("\ndocker build --no-cache -t "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${imageName}")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${tag}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker inspect 查看容器所有的状态")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("running")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v('${docker inspect --format="{{ .State.Running }')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" '),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$containerName")]),s._v(" 2 > /dev/null}\n\n# 条件判断\n# -n 空值判断 如果有一个运行的状态\nif [ ! -n "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$running")]),s._v(' ]; then\n\techo "')]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$containerName")]),s._v(' does not exit"\n    '),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 跑服务")]),s._v("\ndocker run -itd --name "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${containerName}")]),s._v(" -p "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${port}")]),s._v(":80 "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${imageName}")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${tag}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);