(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{527:function(_,v,t){"use strict";t.r(v);var r=t(42),a=Object(r.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"软件测试概念、方法及模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#软件测试概念、方法及模型"}},[_._v("#")]),_._v(" 软件测试概念、方法及模型")]),_._v(" "),t("h2",{attrs:{id:"软件测试的概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#软件测试的概念"}},[_._v("#")]),_._v(" 软件测试的概念")]),_._v(" "),t("ul",[t("li",[_._v("经典定义")])]),_._v(" "),t("p",[_._v("软件测试(Software Testing)，在规定的条件下对程序进行操作，以发现程序错误，衡量软件质量，并对其是否能满足设计要求进行评估的过程")]),_._v(" "),t("ul",[t("li",[_._v("标准定义")])]),_._v(" "),t("p",[_._v("软件测试是使用人工或自动的手段来运行或测定某个软件系统的过程，其目的在于检验它是否满足规定的需求或弄清预期结果与实际结果之间的差别")]),_._v(" "),t("ul",[t("li",[_._v("目的")])]),_._v(" "),t("p",[_._v("软件测试目的在于发现问题，检查系统是否满足需求")]),_._v(" "),t("h2",{attrs:{id:"软件测试的方法和分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#软件测试的方法和分类"}},[_._v("#")]),_._v(" 软件测试的方法和分类")]),_._v(" "),t("p",[t("a",{attrs:{href:"https://imgtu.com/i/RxIbc9",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://z3.ax1x.com/2021/07/09/RxIbc9.png",alt:"RxIbc9.png"}}),t("OutboundLink")],1)]),_._v(" "),t("h2",{attrs:{id:"生命周期各测试方法对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生命周期各测试方法对比"}},[_._v("#")]),_._v(" 生命周期各测试方法对比")]),_._v(" "),t("p",[t("a",{attrs:{href:"https://imgtu.com/i/Rxo6UK",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://z3.ax1x.com/2021/07/09/Rxo6UK.png",alt:"Rxo6UK.png"}}),t("OutboundLink")],1)]),_._v(" "),t("h2",{attrs:{id:"常用术语"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用术语"}},[_._v("#")]),_._v(" 常用术语")]),_._v(" "),t("ul",[t("li",[_._v("C/S")])]),_._v(" "),t("p",[_._v("C 指的是客户端(Client)，S 指的是服务器端(Server)这种软件是基于局域网或互联网的，需要一台服务器来安装服务器端软件，每台客户端都需要安装客户端软件比如我们经常用的 QQ、和各种网络游戏就属于 C/S 结构的软件。")]),_._v(" "),t("ul",[t("li",[_._v("B/S")])]),_._v(" "),t("p",[_._v("B 指的是浏览器(Browser)，S 指的是服务器(Server)，这种软件同样是基于局域网或互联网的，它与结 C/S 结构软件的区别就在于，不需要安装客户端(client)，只需要有浏览器，就可以直接使用。比如搜狐、新浪等门户网站及 163 邮箱都属于 B/S 结构的软件 B/S 结构软件是现在软件的主流，与 C/S 结构软件相比，便于升级和维护，是测试的重点。")]),_._v(" "),t("ul",[t("li",[_._v("缺陷(Bug/Defect)")])]),_._v(" "),t("p",[_._v("软件的 Bug 指的是软件中(包括程序和文档)不符合用户需求的问题")]),_._v(" "),t("ul",[t("li",[_._v("测试环境")])]),_._v(" "),t("p",[_._v("软件测试环境就是软件运行的平台，包括软件、硬件和网络的集合。用个等式来表示:测试环境=软件+硬件+网络软件测试环境就是软件运行的平台，包括软件、硬件和网络的集合。用个等式来表示:测试环境=软件+硬件+网络")]),_._v(" "),t("ul",[t("li",[_._v("测试用例")])]),_._v(" "),t("p",[_._v("在测试执行之前设计的一套详细的测试方案，包括测试环境、测试步骤、测试数据和预期结果。")]),_._v(" "),t("ul",[t("li",[_._v("冒烟测试")])]),_._v(" "),t("p",[_._v("在对一个新版本进行系统大规模地测试之前，先验证一下软件的基本功能是否实现，是否具备可测性")]),_._v(" "),t("ul",[t("li",[_._v("α 测试")])]),_._v(" "),t("p",[_._v("验收测试的一种，指的是由用户、测试人员、开发人员等共同参与的内部测试")]),_._v(" "),t("ul",[t("li",[_._v("β 测试")])]),_._v(" "),t("p",[_._v("验收测试的一种，指的是内测后的公测，即完全交给最终用户测试")]),_._v(" "),t("h2",{attrs:{id:"软件测试的模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#软件测试的模型"}},[_._v("#")]),_._v(" 软件测试的模型")]),_._v(" "),t("ul",[t("li",[_._v("V 模型")])]),_._v(" "),t("p",[_._v("∨ 模型是我们熟知的瀑布模型的一种改进，瀑布模型将软件生命周期划分为计划、分析、设计、编码、测试和维护六个阶段，由于早期的错误可能要等到开发后期的测试阶段才能发现，所以可能带来严重的后果。")]),_._v(" "),t("p",[_._v("模型就是在这点改进了瀑布模型，在软件开发的生存期，开发活动和测试活动几乎同时开始，这两个并行的动态的过程就会极大的减少 bug 和 error 出现的几率。")]),_._v(" "),t("p",[t("a",{attrs:{href:"https://imgtu.com/i/RxHDDs",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://z3.ax1x.com/2021/07/09/RxHDDs.png",alt:"RxHDDs.png"}}),t("OutboundLink")],1)]),_._v(" "),t("ul",[t("li",[_._v("W 模型")])]),_._v(" "),t("p",[_._v("一些高性能高风险的系统、互联网软件，或一个系统难以被具体模块化的时候，就比较难做成模式所需的各种构件，需要更强调迭代的开发模型或者敏捷开发模型。")]),_._v(" "),t("p",[t("a",{attrs:{href:"https://imgtu.com/i/RxHIbR",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://z3.ax1x.com/2021/07/09/RxHIbR.png",alt:"RxHIbR.png"}}),t("OutboundLink")],1)]),_._v(" "),t("h2",{attrs:{id:"软件覆盖率"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#软件覆盖率"}},[_._v("#")]),_._v(" 软件覆盖率")]),_._v(" "),t("p",[_._v("覆盖率是用来度量测试完整性的一个手段，同时也是测试技术有效性的一个度量")]),_._v(" "),t("p",[_._v("覆盖率 = (至少被执行一次的 item 数) / item 的总数")]),_._v(" "),t("p",[_._v("特点：")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("通过覆盖率数据，可以检测我们的测试是否充分")])]),_._v(" "),t("li",[t("p",[_._v("分析出测试的弱点在哪方面")])]),_._v(" "),t("li",[t("p",[_._v("指导我们设计能够增加覆盖率的测试用例，有效提高测试质量，但是测试用例设计不能一味追求覆盖率，因为测试成本随覆盖率的增加而增加。")])])]),_._v(" "),t("h3",{attrs:{id:"需求覆盖率"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#需求覆盖率"}},[_._v("#")]),_._v(" 需求覆盖率")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("定义：它表示在测试中，有哪些函数被测试到了，其被测试到的频率有多大，这些函数在系统所有函数中占的比例有多大通过设计一定的测试用例，要求每个需求点都被测试到。")])]),_._v(" "),t("li",[t("p",[_._v("计算公式：需求覆盖 = (被验证到的需求数量) / (总的需求总数)")])])]),_._v(" "),t("h3",{attrs:{id:"用例覆盖率"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用例覆盖率"}},[_._v("#")]),_._v(" 用例覆盖率")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("定义：主要体现在我们每轮测试验证通过的用例数在总用例中的比重")])]),_._v(" "),t("li",[t("p",[_._v("计算公式：用例覆盖 = (验证通过的用例数量) / (总的用例总数)")])])]),_._v(" "),t("h2",{attrs:{id:"测试覆盖率的应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试覆盖率的应用"}},[_._v("#")]),_._v(" 测试覆盖率的应用")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("简单的测试覆盖率")]),_._v("：本次测试执行的用例数 / 所有用例数")])]),_._v(" "),t("p",[_._v("上述覆盖率统计建立在认为总用例数编写全面，一般对于大型系统测试要求覆盖率 100%")]),_._v(" "),t("p",[_._v("覆盖率的"),t("code",[_._v("审核")]),_._v("：抽样验收")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("基于产品的测试覆盖率")]),_._v("：已测试需求点 / 设计所有需求数")])]),_._v(" "),t("p",[_._v("以产品、需求维度统计，无论大型项目或是小需求迭代都要求覆盖率达到 100%")]),_._v(" "),t("p",[_._v("覆盖率的审核：抽样验收")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("基于白盒的测试覆盖率")]),_._v("：大多工具判断语句覆盖，即单元测试代码覆盖代码行 / 总代码行")])]),_._v(" "),t("p",[_._v("更多考察研发人员，更多时候要求覆盖率达到 80%+")]),_._v(" "),t("p",[t("code",[_._v("缺陷")]),_._v("：覆盖率数据只能代表测试过哪些代码，不能代表是否测试好这些代码，容易遗漏逻辑、判断等场景")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("基于自动化的测试覆盖率")]),_._v("：自动化覆盖的测试场景(测试用例) / 所有测试场景(用例)")])]),_._v(" "),t("p",[_._v("80/20 原则：比如用户 80%的时间在使用 20%的功能，20%的功能就可以支撑起用户最关键的业务场景，自动化测试的用例选择更着重于这 20%的核心功能")]),_._v(" "),t("p",[_._v("用途：自动化测试更着重于回归验证，没必要追求过高的覆盖率，而要考虑用例设计")]),_._v(" "),t("h2",{attrs:{id:"测试覆盖率的最终意义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试覆盖率的最终意义"}},[_._v("#")]),_._v(" 测试覆盖率的最终意义")]),_._v(" "),t("p",[_._v("应用最多的地方在"),t("code",[_._v("测试停止标准")])]),_._v(" "),t("p",[_._v("单纯的讨论测试覆盖率，在瀑布式开发模型中并不重要，但是在"),t("code",[_._v("螺旋式")]),_._v("、"),t("code",[_._v("敏捷开发")]),_._v("模型中，由于不断迭代累加，很难确定哪一些模块在开发中没有给予足够的测试")]),_._v(" "),t("p",[_._v("在"),t("code",[_._v("短迭代")]),_._v("、"),t("code",[_._v("DevOps")]),_._v("中，更强调单元测试覆盖率来评估不断增加的代码数量")])])}),[],!1,null,null,null);v.default=a.exports}}]);