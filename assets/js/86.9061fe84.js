(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{445:function(s,t,a){"use strict";a.r(t);var n=a(42),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"java-封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-封装"}},[s._v("#")]),s._v(" Java 封装")]),s._v(" "),a("p",[s._v("封装的含义：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("将类的某些信息隐藏在类内部，不允许外部程序直接访问")])]),s._v(" "),a("li",[a("p",[s._v("通过该类提供的方法来实现对隐藏信息的操作和访问")])]),s._v(" "),a("li",[a("p",[s._v("隐藏对象的信息")])]),s._v(" "),a("li",[a("p",[s._v("留出访问的接口")])])]),s._v(" "),a("p",[s._v("封装的特点：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("只能通过规定的方法访问数据")])]),s._v(" "),a("li",[a("p",[s._v("隐藏类的实例细节，方便修改和实现")])])]),s._v(" "),a("p",[a("a",{attrs:{href:"https://imgtu.com/i/2usgP0",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://z3.ax1x.com/2021/06/01/2usgP0.png",alt:"2usgP0.png"}}),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"java-包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-包"}},[s._v("#")]),s._v(" Java 包")]),s._v(" "),a("h3",{attrs:{id:"作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[s._v("#")]),s._v(" 作用")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("管理 Java 文件")])]),s._v(" "),a("li",[a("p",[s._v("解决同名文件冲突")])])]),s._v(" "),a("h3",{attrs:{id:"定义包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义包"}},[s._v("#")]),s._v(" 定义包")]),s._v(" "),a("p",[s._v("语法：package 包名")]),s._v(" "),a("p",[s._v("例如： "),a("code",[s._v("package com.imooc.animal;")])]),s._v(" "),a("p",[s._v("注意事项：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("必须放在 Java 源文件中的第一行")])]),s._v(" "),a("li",[a("p",[s._v("一个 Java 源文件中只能有一个 package 语句")])]),s._v(" "),a("li",[a("p",[s._v("包名全部英文小写")])]),s._v(" "),a("li",[a("p",[s._v("命名方式：域名倒叙 + 模块 + 功能")])])]),s._v(" "),a("h2",{attrs:{id:"static-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#static-关键字"}},[s._v("#")]),s._v(" static 关键字")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("类对象共享")])]),s._v(" "),a("li",[a("p",[s._v("类加载时就会产生,销毁时释放,生命周期长")])]),s._v(" "),a("li",[a("p",[s._v("静态成员需要通过类名来访问, 才不会有警告")])])]),s._v(" "),a("p",[s._v("例如: Cat.price")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("imooc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 修改属性的可见性->private(只能在当前类内访问)")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" month"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" weight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" species"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// static: 静态成员, 类成员")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 无论这个类实例化出来了多少个对象, price都会共用同一块储存空间")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"静态方法注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态方法注意事项"}},[s._v("#")]),s._v(" 静态方法注意事项")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("成员方法中, 使用"),a("code",[s._v("this.静态成员")]),s._v("即可访问静态属性")])]),s._v(" "),a("li",[a("p",[s._v("静态方法中不能直接访问"),a("strong",[s._v("同一个类")]),s._v("的非静态成员(方法和属性都不可以), 只能直接调用"),a("strong",[s._v("同一个类")]),s._v("静态方法")])]),s._v(" "),a("li",[a("p",[s._v("如果一定要调用非静态的方法, 只能通过对象实例化之后, 通过"),a("strong",[s._v("对象.成员")]),s._v("来访问")])]),s._v(" "),a("li",[a("p",[s._v("静态方法中不能出现 this 关键字")])])]),s._v(" "),a("h2",{attrs:{id:"代码块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码块"}},[s._v("#")]),s._v(" 代码块")]),s._v(" "),a("ul",[a("li",[s._v("执行顺序")])]),s._v(" "),a("p",[s._v("静态代码块 => 构造代码块 => 构造方法 => 普通代码块")]),s._v(" "),a("ul",[a("li",[s._v("普通代码块")])]),s._v(" "),a("p",[s._v("顺序执行, 先出现, 先执行")]),s._v(" "),a("ul",[a("li",[s._v("构造代码块")])]),s._v(" "),a("blockquote",[a("p",[s._v("每次实例化对象的时候都会执行")])]),s._v(" "),a("p",[s._v("创建对象时调用, 优先于"),a("code",[s._v("构造方法")]),s._v("执行")]),s._v(" "),a("ul",[a("li",[s._v("静态代码块")])]),s._v(" "),a("blockquote",[a("p",[s._v("要注意了, 无论实例化多少个对象, 静态代码块的代码只会执行一次")])]),s._v(" "),a("p",[s._v("类加载时调用, 优先于"),a("code",[s._v("构造代码块")]),s._v("执行")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestDemo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"这是`构造代码块`"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 构造代码块, 创建对象时调用, 在构造方法运行之前执行(相同的构造代码块顺序执行)")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果加上了static关键字, 这个就会变成静态代码块(无论放在何处, 优于构造代码块执行)")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"这是`静态代码块`"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 类加载时调用, 优于构造代码块执行")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"这是普通代码块"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 普通代码块是顺序执行的")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("ul",[a("li",[s._v("注意事项")])]),s._v(" "),a("p",[s._v("(1)执行优先级: 静态代码块 > 构造代码块 > 构造方法\n(2)执行次数: 静态代码块"),a("code",[s._v("只执行一次")]),s._v("; 构造代码块, 构造方法依据实例化对象的个数而定")]),s._v(" "),a("p",[s._v("(3)不能在静态代码块中直接对"),a("strong",[s._v("非静态成员")]),s._v("赋值\n(4)可以在构造代码块中直接操作静态成员和非静态成员")]),s._v(" "),a("p",[s._v("(5)不能在静态代码块中声明静态成员, 但是可以声明非静态成员\n(6)静态代码块中声明的成员, 在外部无法进行访问")]),s._v(" "),a("p",[s._v("(7)普通代码块在方法内顺序执行，各自作用范围独立。\n(8)方法内定义的局部变量，作用范围为：自定义位置起，至方法结束。在此期间，不允许方法中普通代码块内存在局部变量的声明。")])])}),[],!1,null,null,null);t.default=e.exports}}]);